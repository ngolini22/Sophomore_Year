http://www.cs.dartmouth.edu/%7Ecampbell/cs60/lab6.html
3
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="lab6.tex"> 
<meta name="date" content="2012-04-29 22:18:00"> 
<link rel="stylesheet" type="text/css" href="lab6.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 60 Computer Networks</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lab6</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>DartNet: Simple Overlay Network (SON)</h1>
<!--l. 19--><p class="noindent" >OK, we have completed the Simple Reliable Transport. We have implemented the transport connection
establishment, data transfer including go-back-n and checksum fucntions, and finally, connection
teardown. Well done! Now we will move down the stack.
<!--l. 21--><p class="noindent" >In Lab6 we will implement the overlay network (SON) layer (of the DartNet stack. We will also use a
simple network driver (that will drive the overlay) to test our overlay layer implementation. At the end of
this lab you will have good sense of how DartNet&#8217;s overlay layer works. In Lab7 we will implement
the Simple Network Protocol (SNP) and put the complete stack together: SRT, SNP, and
SON
<!--l. 24--><p class="noindent" >The overlay network layer is implemented as a process. Each node in the overlay network will have an
SON process running. The SON process maintains TCP connections to all the neighboring nodes in the
overlay network. The SON process also maintains a local TCP connection to the SNP layer. The SNP
layer is also implemented as a process. Each node in the overlay network will have a SNP process running.
See the design notes for more details.
<!--l. 27--><p class="noindent" >The SON process contains multiple threads. For each TCP connection to a neighbor, there is a
listen_to_neighbor thread. The listen_to_neighbor thread keeps receiving packets from a neighbor and
forwarding the received packets to the local SNP process. For the TCP connection to the local SNP
process, another thread (the main thread) keeps receiving sendpkt_arg_t structures which contain
packets and the next hops&#8217; nodeIDs and sending these packets to the next hops in the overlay
network.
<!--l. 30--><p class="noindent" >The overlay network&#8217;s topology information is contained in topology.dat file. To use the topology
information in SON process, you need to write code to parse the topology.dat file. Some APIs for parsing
the topology file is provided in topology.h. You can implement those APIs or you can define your own
APIs. You should implement these topology parsing APIs in topology.c. A SON process also maintains a
neighbor table to record all the TCP connections to its neighboring nodes. To use the neighbor table, you
need to implement the neighbor table APIs defined in neighbortable.h. The SON process sends and
receives data in packets. The APIs to send and receive packets are defined in pkt.h. You also need to
implement these APIs.
<!--l. 33--><p class="noindent" >After you have implemented all these APIs you can start implementing the overlay layer in overlay.c. Some
helpful functions for implement overlay layer are defined in overlay.h. You can implement them and use
them in your SON process implementation.
                                                                                  
                                                                                  
<!--l. 36--><p class="noindent" >After you have implemented your overlay layer, you need to implement a simple SNP layer. The SNP
process will connect to the local SON process and test the overlay by periodically requesting the local
SON process to send an empty route update packet to to all its neighbors. The SNP process should be
able to receive these route update packets sent from its neighbors.
<!--l. 39--><p class="noindent" ><span 
class="cmbx-10">Before you read another line of this programming assignment please read or re-read the</span>
<span 
class="cmbx-10">Lecture notes on </span><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/overlay.html" > <span 
class="cmbx-10">Overlay Network Design </span></a><span 
class="cmbx-10">. The description in this assignment is fairly brief</span>
<span 
class="cmbx-10">and the context for understanding it is found in the design notes.</span><br 
class="newline" />
<!--l. 41--><p class="noindent" >While quite a lot of information is given on APIs, data structures, connection management, you will
need to think about how to implement the implement these required APIs by overlay network
layer.
<!--l. 44--><p class="noindent" ><span 
class="cmbx-10">Submitting assignment</span>: Submit using svn.
<!--l. 46--><p class="noindent" >The following sequence of Linux commands should be used to submit your work by the deadline:
<!--l. 48--><p class="noindent" >Change to your labs directory <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">cd</span><span 
class="cmtt-10">&#x00A0;~/cs60/labs</span></span></span> This directory contains your lab6 directory where your
solutions are found.
<!--l. 50--><p class="noindent" >Please make sure that the lab6 directory contains a simple text file, named README, describing anything
&#8220;unusual&#8221; about how your solutions should be located, executed, and considered; and a Makefile to build
the source.
<!--l. 52--><p class="noindent" >Your lab6 should have the following structure and files.
<!--l. 54--><p class="noindent" >[atc@dhcp-212-223 lab6] ls * <br 
class="newline" />Makefile ReadMe<br 
class="newline" />
<!--l. 57--><p class="noindent" >common:<br 
class="newline" />constants.h pkt.c pkt.h<br 
class="newline" />
<!--l. 60--><p class="noindent" >topology:<br 
class="newline" />topology.c topology.h topology.dat <br 
class="newline" />
<!--l. 63--><p class="noindent" >overlay:<br 
class="newline" />neighbortable.c neighbortable.h overlay.c overlay.h<br 
class="newline" />
<!--l. 66--><p class="noindent" >network:<br 
class="newline" />network.c network.h
<!--l. 69--><p class="noindent" >OK, let&#8217;s get going
<!--l. 71--><p class="noindent" >____________________________________________________________________________
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Important source and header files - read them </h3>
                                                                                  
                                                                                  
<!--l. 75--><p class="noindent" >OK, now you have read the overlay network design notes, look at these important files - browse them for
now, we will get back to them.
<!--l. 79--><p class="noindent" ><span 
class="cmbx-10">Note, all the files listed below plus other files (e.g., Makefile, README, etc.) needed for</span>
<span 
class="cmbx-10">this lab can be found in this tarball file: </span><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/lab6handout.tar.gz" > <span 
class="cmbx-10">lab6handout.tar.gz </span></a><span 
class="cmbx-10">. Save this and work from this</span>
<span 
class="cmbx-10">tarball for your assignment</span>.
<!--l. 81--><p class="noindent" >Topology directory: topology.dat contains the topology information of the overlay network. We will use
four nodes to form the overlay network in this lab. You should replace the host1, host2, host3, host4 with
real hostnames in topology.dat.
<!--l. 83--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/topology.dat" > topology.dat</a>. <br 
class="newline" />
<!--l. 85--><p class="noindent" >Topology directory: topology.h contains the APIs to parse the topology.dat file. It is up to you to
determine if want to implement these APIs or not. You can pick the ones you feel useful to implement.
You can also define your own APIs to impement. You need to implement your APIs in the topology.c
file.
<!--l. 88--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/topology.h" > topology.h</a>. <br 
class="newline" />
<!--l. 90--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/topology.c" > topology.c</a>. <br 
class="newline" />
<!--l. 92--><p class="noindent" >Common directory: constants.h contains the all the constants.
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">Currently</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;there</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;3</span><span 
class="cmtt-10">&#x00A0;port</span><span 
class="cmtt-10">&#x00A0;numbers</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;constants.h:</span><br /><span 
class="cmtt-10">CONNECTION_PORT</span><br /><span 
class="cmtt-10">OVERLAY_PORT</span><span 
class="cmtt-10">&#x00A0;NETWORK_PORT</span><br /><br /><span 
class="cmtt-10">Please</span><span 
class="cmtt-10">&#x00A0;assign</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;port</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;them.</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;port</span><span 
class="cmtt-10">&#x00A0;numbers</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2000</span><span 
class="cmtt-10">&#x00A0;through</span><span 
class="cmtt-10">&#x00A0;5000.</span><br /><span 
class="cmtt-10">Do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;Well</span><span 
class="cmtt-10">&#x00A0;Known</span><span 
class="cmtt-10">&#x00A0;Ports</span><span 
class="cmtt-10">&#x00A0;which</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;through</span><span 
class="cmtt-10">&#x00A0;1023.</span><br /><br /><span 
class="cmtt-10">If</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;run</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;default</span><span 
class="cmtt-10">&#x00A0;settings</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;ports</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;constants.h,</span><br /><span 
class="cmtt-10">you</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;run</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;situations</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;port</span><span 
class="cmtt-10">&#x00A0;being</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;classmate.</span><br /><span 
class="cmtt-10">So</span><span 
class="cmtt-10">&#x00A0;set</span><span 
class="cmtt-10">&#x00A0;your</span><span 
class="cmtt-10">&#x00A0;own</span><span 
class="cmtt-10">&#x00A0;values</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;minimize</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;likelihood</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;happening.</span><br /><br /></div></div>
<!--l. 114--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/constants.h" > constants.h</a>. <br 
class="newline" />
<!--l. 116--><p class="noindent" >Common directory: pkt.h defines the packet format for the packet APIs you need to implement. You need
to write your pkt.c file to implement these APIs.
<!--l. 118--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/pkt.h" > pkt.h</a>. <br 
class="newline" />
<!--l. 120--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/pkt.c" > pkt.c</a>. <br 
class="newline" />
<!--l. 122--><p class="noindent" >Overlay directory: neighbortable.h defines the neighbor table data structure and APIs you need to
implement. You need to write your neighbortable.c to implement these APIs.
<!--l. 124--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/neighbortable.h" > neighbortable.h</a>. <br 
class="newline" />
<!--l. 126--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/neighbortable.c" > neighbortable.c</a>. <br 
class="newline" />
<!--l. 128--><p class="noindent" >Overlay directory: overlay.h defines the functions used by overlay. You need to implement these functions
in overlay.c
<!--l. 130--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/overlay.h" > overlay.h</a>. <br 
class="newline" />
                                                                                  
                                                                                  
<!--l. 132--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/overlay.c" > overlay.c</a>. <br 
class="newline" />
<!--l. 134--><p class="noindent" >Network directory: network.h defines the functions used by network layer. You only need to implement a
simple network layer to drive and test the overlay functionality (note, this is not the full functional Simple
Network Protocol that we will implement in the next lab but a simple set of drivers to run the overlay).
Your test code should be implemented in network.c
<!--l. 136--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/network.h" > network.h</a>. <br 
class="newline" />
<!--l. 138--><p class="noindent" ><a 
href="http://www.cs.dartmouth.edu/~campbell/cs60/network.c" > network.c</a>. <br 
class="newline" />
<!--l. 140--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>The Simple Network Protocol (SNP) Packet APIs</h3>
<!--l. 142--><p class="noindent" >The SNP process calls overlay_sendpkt() to send a packet to the next hop according to the routing table.
When the SNP process calls overlay_sendpkt(), a sendpkt_arg_t structure (see below) which contains the
next hop&#8217;s nodeID and the packet itself is sent to the local SON process. The local SON process uses
getpktToSend() to receive this sendpkt_arg_t structure. The local SON process then sends the packet out
by calling sendpkt().
<!--l. 145--><p class="noindent" >The SON process has one thread for each TCP connection to its neighboring nodes. In each thread,
recvpkt() function is used to receive the packets from a neighboring node. After a packet is received by
recvpkt(), the SON process forwards the packet to the local SNP process by calling forwardpktToSNP().
The local SNP process calls overlay_recvpkt() to receive the packets forwarded from the SON
process.
<!--l. 147--><p class="noindent" >The SON process and the SNP process are connected with a local TCP connection. The nodes in the
overlay network are interconnected with TCP connections too. To send data over the TCP
connections, we use delimiters as we did for segments. We use &#8220;!&amp;&#8221; to indicate the starting of data
transferring and use &#8220;!#&#8221; to indicate the end of data transferring. So when the data is sent
over a TCP connection, &#8220;!&amp;&#8221; is sent first, followed by the data and then &#8220;!#&#8221; is sent. When
receiving the data at the other end of the TCP connection, a simple finite state machine can be
used.
<!--l. 149--><p class="noindent" >We provide more detailed packet APIs here.
<!--l. 151--><p class="noindent" >The SON process provides two function calls for the SNP process: overlay_sendpkt() and
overlay_recvpkt().
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;overlay_sendpkt()</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;overlay_sendpkt()</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;request</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;send</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;out</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;overlay</span><span 
class="cmtt-10">&#x00A0;network.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;connected</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;overlay_sendpkt(),</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;sends</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;receives</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;calling</span><span 
class="cmtt-10">&#x00A0;getpktToSend().</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Then</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;sends</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;out</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;hop</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;calling</span><span 
class="cmtt-10">&#x00A0;sendpkt().</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;sendpktargument</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nextNodeID;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//node</span><span 
class="cmtt-10">&#x00A0;ID</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;hop</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;pkt_t</span><span 
class="cmtt-10">&#x00A0;pkt;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//the</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;sent</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;overlay_sendpkt()</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;request</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;send</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;out</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;overlay</span><span 
class="cmtt-10">&#x00A0;network.</span><span 
class="cmtt-10">&#x00A0;The</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;connected</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;In</span><span 
class="cmtt-10">&#x00A0;overlay_sendpkt(),</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;hop&#8217;s</span><span 
class="cmtt-10">&#x00A0;nodeID</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;encapsulated</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;parameter</span><span 
class="cmtt-10">&#x00A0;overlay_conn</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection&#8217;s</span><span 
class="cmtt-10">&#x00A0;socket</span><span 
class="cmtt-10">&#x00A0;descriptior</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;When</span><span 
class="cmtt-10">&#x00A0;sending</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process,</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;&#8217;!&amp;&#8217;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;&#8217;!#&#8217;</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;delimiters.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Send</span><span 
class="cmtt-10">&#x00A0;!&amp;</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;!#</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Return</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;successfully,</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1.</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;overlay_sendpkt(int</span><span 
class="cmtt-10">&#x00A0;nextNodeID,</span><span 
class="cmtt-10">&#x00A0;pkt_t*</span><span 
class="cmtt-10">&#x00A0;pkt,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;overlay_conn)</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;overlay_recvpkt()</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;receive</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;parameter</span><span 
class="cmtt-10">&#x00A0;overlay_conn</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection&#8217;s</span><span 
class="cmtt-10">&#x00A0;socket</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;descriptior</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;over</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process,</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;delimiters</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;!&amp;</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;!#</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;used.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;To</span><span 
class="cmtt-10">&#x00A0;receive</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet,</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;uses</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;simple</span><span 
class="cmtt-10">&#x00A0;finite</span><span 
class="cmtt-10">&#x00A0;state</span><span 
class="cmtt-10">&#x00A0;machine(FSM)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTART1</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;starting</span><span 
class="cmtt-10">&#x00A0;point</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTART2</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;!&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;expecting</span><span 
class="cmtt-10">&#x00A0;&#8217;&amp;&#8217;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;receive</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTRECV</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;&amp;&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTOP1</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;!&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;expecting</span><span 
class="cmtt-10">&#x00A0;&#8217;#&#8217;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;finish</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Return</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;received</span><span 
class="cmtt-10">&#x00A0;successfully,</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1.</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;overlay_recvpkt(pkt_t*</span><span 
class="cmtt-10">&#x00A0;pkt,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;overlay_conn)</span><br /><br /></div></div>
<!--l. 214--><p class="noindent" >The SON process uses getpktToSend() to get a sendpkt_arg_t data structure which contains a packet and
the next hop&#8217;s nodeID from the SNP process. The SON process uses forwardpktToSNP() to forward a
                                                                                  
                                                                                  
packet to the SNP process.
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;receive</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;hop&#8217;s</span><span 
class="cmtt-10">&#x00A0;nodeID</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;encapsulated</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;structure.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;parameter</span><span 
class="cmtt-10">&#x00A0;network_conn</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection&#8217;s</span><span 
class="cmtt-10">&#x00A0;socket</span><span 
class="cmtt-10">&#x00A0;descriptior</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process,</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;delimiters</span><span 
class="cmtt-10">&#x00A0;!&amp;</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;!#</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;used.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;To</span><span 
class="cmtt-10">&#x00A0;receive</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet,</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;uses</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;simple</span><span 
class="cmtt-10">&#x00A0;finite</span><span 
class="cmtt-10">&#x00A0;state</span><span 
class="cmtt-10">&#x00A0;machine(FSM)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTART1</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;starting</span><span 
class="cmtt-10">&#x00A0;point</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTART2</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;!&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;expecting</span><span 
class="cmtt-10">&#x00A0;&#8217;&amp;&#8217;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;receive</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTRECV</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;&amp;&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTOP1</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;!&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;expecting</span><span 
class="cmtt-10">&#x00A0;&#8217;#&#8217;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;finish</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Return</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;received</span><span 
class="cmtt-10">&#x00A0;successfully,</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1.</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;getpktToSend(pkt_t*</span><span 
class="cmtt-10">&#x00A0;pkt,</span><span 
class="cmtt-10">&#x00A0;int*</span><span 
class="cmtt-10">&#x00A0;nextNode,int</span><span 
class="cmtt-10">&#x00A0;network_conn);</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;forwardpktToSNP()</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;receives</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;from</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighbor</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;overlay</span><span 
class="cmtt-10">&#x00A0;network.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;calls</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;forward</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;parameter</span><span 
class="cmtt-10">&#x00A0;network_conn</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection&#8217;s</span><span 
class="cmtt-10">&#x00A0;socket</span><span 
class="cmtt-10">&#x00A0;descriptior</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process,</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;delimiters</span><span 
class="cmtt-10">&#x00A0;!&amp;</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;!#</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;used.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Send</span><span 
class="cmtt-10">&#x00A0;!&amp;</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;!#</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Return</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;successfully,</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1.</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;forwardpktToSNP(pkt_t*</span><span 
class="cmtt-10">&#x00A0;pkt,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;network_conn);</span><br /><br /></div></div>
<!--l. 261--><p class="noindent" >The SON process uses sendpkt() to send a packet to a neighbor and uses recvpkt() to receive a packet
from a neighbor.
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;sendpkt()</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;send</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;received</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;hop.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Parameter</span><span 
class="cmtt-10">&#x00A0;conn</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection&#8217;s</span><span 
class="cmtt-10">&#x00A0;socket</span><span 
class="cmtt-10">&#x00A0;descritpor</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;hop</span><span 
class="cmtt-10">&#x00A0;node.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighboring</span><span 
class="cmtt-10">&#x00A0;node,</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;delimiters</span><span 
class="cmtt-10">&#x00A0;!&amp;</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;!#</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;used.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Send</span><span 
class="cmtt-10">&#x00A0;!&amp;</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;!#</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Return</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;successfully,</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1.</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;sendpkt(pkt_t*</span><span 
class="cmtt-10">&#x00A0;pkt,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;conn);</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;recvpkt()</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;receive</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighbor</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;overlay</span><span 
class="cmtt-10">&#x00A0;network.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Parameter</span><span 
class="cmtt-10">&#x00A0;conn</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection&#8217;s</span><span 
class="cmtt-10">&#x00A0;socket</span><span 
class="cmtt-10">&#x00A0;descritpor</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighbor.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;neighbor,</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;delimiters</span><span 
class="cmtt-10">&#x00A0;!&amp;</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;!#</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;used.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;To</span><span 
class="cmtt-10">&#x00A0;receive</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet,</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;uses</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;simple</span><span 
class="cmtt-10">&#x00A0;finite</span><span 
class="cmtt-10">&#x00A0;state</span><span 
class="cmtt-10">&#x00A0;machine(FSM)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTART1</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;starting</span><span 
class="cmtt-10">&#x00A0;point</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTART2</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;!&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;expecting</span><span 
class="cmtt-10">&#x00A0;&#8217;&amp;&#8217;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;receive</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTRECV</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;&amp;&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;PKTSTOP1</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;&#8217;!&#8217;</span><span 
class="cmtt-10">&#x00A0;received,</span><span 
class="cmtt-10">&#x00A0;expecting</span><span 
class="cmtt-10">&#x00A0;&#8217;#&#8217;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;finish</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;data</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Return</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;received</span><span 
class="cmtt-10">&#x00A0;successfully,</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1.</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;recvpkt(pkt_t*</span><span 
class="cmtt-10">&#x00A0;pkt,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;conn);</span><br /><br /></div></div>
<!--l. 306--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>The Neighbor Table APIs</h3>
<!--l. 307--><p class="noindent" >Each Node has a Overlay Network (SON) process running. Each SON process maintains the neighbor
table for the node on which the process is running. The neighbor table APIs are defined in
neighbortable.h.
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;first</span><span 
class="cmtt-10">&#x00A0;creates</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighbor</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;dynamically.</span><br /><span 
class="cmtt-10">//It</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;parses</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;topology/topology.dat</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;fills</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">//nodeID</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;nodeIP</span><span 
class="cmtt-10">&#x00A0;fields</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;entries,</span><span 
class="cmtt-10">&#x00A0;initialize</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;conn</span><span 
class="cmtt-10">&#x00A0;field</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;-1</span><br /><span 
class="cmtt-10">//return</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;created</span><span 
class="cmtt-10">&#x00A0;neighbor</span><br /><br /><span 
class="cmtt-10">tablenbr_entry_t*</span><span 
class="cmtt-10">&#x00A0;nt_create();</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox9"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;destroys</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighbortable.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;closes</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;connections</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;nt_destroy(nbr_entry_t*</span><span 
class="cmtt-10">&#x00A0;nt);</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox10"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;assign</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighbor</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;entry</span><br /><span 
class="cmtt-10">//for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighboring</span><span 
class="cmtt-10">&#x00A0;node.</span><br /><span 
class="cmtt-10">//if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connection</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;successfully</span><span 
class="cmtt-10">&#x00A0;assigned,</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">//otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;nt_addconn(nbr_entry_t*</span><span 
class="cmtt-10">&#x00A0;nt,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nodeID,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;conn);</span><br /><br /></div></div>
<!--l. 358--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>The Overlay Network Functions</h3>
<!--l. 359--><p class="noindent" >The overlay process uses the following functions. They are defined in overlay.h and should be implemented
in overlay.c.
<div 
class="colorbox" id="colorbox11"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;thread</span><span 
class="cmtt-10">&#x00A0;opens</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;port</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;CSONNECTISON_PORT</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;waits</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;incoming</span><br /><span 
class="cmtt-10">//connections</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;neighbors</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;larger</span><span 
class="cmtt-10">&#x00A0;node</span><span 
class="cmtt-10">&#x00A0;ID</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;my</span><span 
class="cmtt-10">&#x00A0;nodeID,</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;After</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;incoming</span><span 
class="cmtt-10">&#x00A0;connections</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;established,</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;thread</span><span 
class="cmtt-10">&#x00A0;terminates.</span><br /><br /><span 
class="cmtt-10">void*</span><span 
class="cmtt-10">&#x00A0;waitNbrs();</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox12"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;connects</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;neighbors</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;smaller</span><span 
class="cmtt-10">&#x00A0;node</span><span 
class="cmtt-10">&#x00A0;ID</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;my</span><span 
class="cmtt-10">&#x00A0;nodeID</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;After</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;outgoing</span><span 
class="cmtt-10">&#x00A0;connections</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;established,</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;1,</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1.</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;connectNbrs();</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox13"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;opens</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;port</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;OVERLAY_PORT,</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;waits</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;incoming</span><br /><span 
class="cmtt-10">//connection</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process.</span><span 
class="cmtt-10">&#x00A0;After</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;SNP</span><br /><span 
class="cmtt-10">//process</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;connected,</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;keeps</span><span 
class="cmtt-10">&#x00A0;getting</span><span 
class="cmtt-10">&#x00A0;sendpkt_arg_t</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">//from</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process,</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sends</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packets</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;hop</span><br /><span 
class="cmtt-10">//in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;overlay</span><span 
class="cmtt-10">&#x00A0;network.</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;hop&#8217;s</span><span 
class="cmtt-10">&#x00A0;nodeID</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;BROADCAST_NODEID,</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet</span><br /><span 
class="cmtt-10">//should</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;sent</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;neighboring</span><span 
class="cmtt-10">&#x00A0;noddes.</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;waitNetwork();</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox14"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//Each</span><span 
class="cmtt-10">&#x00A0;listen_to_neighbor</span><span 
class="cmtt-10">&#x00A0;thread</span><span 
class="cmtt-10">&#x00A0;keeps</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;packets</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;neighbor.</span><br /><span 
class="cmtt-10">//It</span><span 
class="cmtt-10">&#x00A0;handles</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;received</span><span 
class="cmtt-10">&#x00A0;packets</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;forwarding</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packets</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process.</span><br /><span 
class="cmtt-10">//all</span><span 
class="cmtt-10">&#x00A0;listen_to_neighbor</span><span 
class="cmtt-10">&#x00A0;threads</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;started</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TCP</span><span 
class="cmtt-10">&#x00A0;connections</span><br /><span 
class="cmtt-10">//to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;neighbors</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;established.</span><br /><br /><span 
class="cmtt-10">void*</span><span 
class="cmtt-10">&#x00A0;listen_to_neighbor(void*</span><span 
class="cmtt-10">&#x00A0;arg);</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox15"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;stops</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;overlay</span><br /><span 
class="cmtt-10">//it</span><span 
class="cmtt-10">&#x00A0;closes</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;connections</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;signal</span><span 
class="cmtt-10">&#x00A0;SIGINT.</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;overlay_stop();</span><br /><br /></div></div>
                                                                                  
                                                                                  
<!--l. 444--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>The Network Layer Functions</h3>
<!--l. 446--><p class="noindent" >The network layer process uses the following functions. They are defined in network.h and should be
implemented in network.c.
<div 
class="colorbox" id="colorbox16"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">/This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;connect</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">//the</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;port</span><span 
class="cmtt-10">&#x00A0;OVERLAY_PORT.</span><br /><span 
class="cmtt-10">//connection</span><span 
class="cmtt-10">&#x00A0;descriptor</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;returned</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;success,</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;-1.</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;connectToOverlay()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox17"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//This</span><span 
class="cmtt-10">&#x00A0;thread</span><span 
class="cmtt-10">&#x00A0;sends</span><span 
class="cmtt-10">&#x00A0;out</span><span 
class="cmtt-10">&#x00A0;route</span><span 
class="cmtt-10">&#x00A0;update</span><span 
class="cmtt-10">&#x00A0;packets</span><span 
class="cmtt-10">&#x00A0;every</span><span 
class="cmtt-10">&#x00A0;ROUTEUPDATE_INTERVAL</span><span 
class="cmtt-10">&#x00A0;time</span><br /><span 
class="cmtt-10">//In</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;lab</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;thread</span><span 
class="cmtt-10">&#x00A0;only</span><span 
class="cmtt-10">&#x00A0;broadcasts</span><span 
class="cmtt-10">&#x00A0;empty</span><span 
class="cmtt-10">&#x00A0;route</span><span 
class="cmtt-10">&#x00A0;update</span><span 
class="cmtt-10">&#x00A0;packets</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;all</span><br /><span 
class="cmtt-10">//the</span><span 
class="cmtt-10">&#x00A0;neighbors,</span><span 
class="cmtt-10">&#x00A0;broadcasting</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;done</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;set</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dest_nodeID</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;header</span><br /><span 
class="cmtt-10">//as</span><span 
class="cmtt-10">&#x00A0;BROADCAST_NODEID</span><br /><br /><span 
class="cmtt-10">void*</span><span 
class="cmtt-10">&#x00A0;routeupdate_daemon(void*</span><span 
class="cmtt-10">&#x00A0;arg)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox18"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//This</span><span 
class="cmtt-10">&#x00A0;thread</span><span 
class="cmtt-10">&#x00A0;handles</span><span 
class="cmtt-10">&#x00A0;incoming</span><span 
class="cmtt-10">&#x00A0;packets</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process.</span><br /><span 
class="cmtt-10">//It</span><span 
class="cmtt-10">&#x00A0;receives</span><span 
class="cmtt-10">&#x00A0;packets</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SON</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;calling</span><span 
class="cmtt-10">&#x00A0;overlay_recvpkt().</span><br /><span 
class="cmtt-10">//In</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;lab,</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;receiving</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet,</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;thread</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;outputs</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet</span><br /><span 
class="cmtt-10">//received</span><span 
class="cmtt-10">&#x00A0;information</span><span 
class="cmtt-10">&#x00A0;without</span><span 
class="cmtt-10">&#x00A0;handling</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;packet.</span><br /><span 
class="cmtt-10">//You</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;directly.</span><br /><br /><span 
class="cmtt-10">void*</span><span 
class="cmtt-10">&#x00A0;pkthandler(void*</span><span 
class="cmtt-10">&#x00A0;arg)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;pkt_t</span><span 
class="cmtt-10">&#x00A0;pkt;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;while(overlay_recvpkt(&amp;pkt,overlay_conn)&#x003E;0)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Routing:</span><span 
class="cmtt-10">&#x00A0;received</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;packet</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;neighbor</span><span 
class="cmtt-10">&#x00A0;%d\n",pkt.header.src_nodeID);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;close(overlay_conn);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;overlay_conn</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;-1;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;pthread_exit(NULL);</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<div 
class="colorbox" id="colorbox19"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//This</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;stops</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process.</span><br /><span 
class="cmtt-10">//It</span><span 
class="cmtt-10">&#x00A0;closes</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;connections</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;called</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;SNP</span><span 
class="cmtt-10">&#x00A0;process</span><span 
class="cmtt-10">&#x00A0;receives</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;signal</span><span 
class="cmtt-10">&#x00A0;SIGINT.</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;network_stop()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
 
</body></html> 

                                                                                  


